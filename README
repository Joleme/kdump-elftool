This is kdumptool, a tool for creating usable coredumps from a kernel
crash.

You will need to patch your kernel with the patches in
"kernel-patches" before this will work.  These patches add system
memory ranges and the physical address of the kernel page table to the
data passed from the old kernel to the new kernel.  The MIPS-specific
patch is only required for MIPS, obviously, it adds a boatload of
parameters that are required to successfully navigate the page tables.

To use this, use the kexec/kdump instructions to get into a crash dump
kernel (the kernel that boots from the crashed kernel).  It will have
/dev/oldmem and /proc/vmcore available.

Run "kdumptool topelf -o pelffile" and copy pelffile to your system
where you will be doing the analysis.

Before doing analysis, run "kdumptool tovelf -i pelffile -o kcore" to
generate the gdb-usable core file.

Then do "gdb vmlinux kcore".  For more information, see:
  http://www.elinux.org/Debugging_The_Linux_Kernel_Using_Gdb


Relocatable Kernels
-------------------

Kernels that are relocatable cannot be debugged as-is by gdb, they
require some changes.  kdump-tool adds an AT_ENTRY auxv entry to the
core dump if an "entry" field is in the VMCOREINFO.  gdb can use this
and compare with the entry field in the vmlinux elf header and
relocate the core dump properly.

However, gdb will only do that with dynamic executables.  So the
program kdump-makedyn was added to convert an executable from fixed
address to dynamic type to fool gdb.

You will probably need kernel patches to add the entry field.  It
should generally be the "ENTRY()" field in
arch/<arch>/kernel/vmlinux.lds.S.  Kernel patches are in the
kernel-patches directory with obvious file names.
